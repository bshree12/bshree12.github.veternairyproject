{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/daignosis.service.ts","./src/app/daignosis.ts","./src/app/daignosis/daignosis.component.ts","./src/app/daignosis/daignosis.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/patient-details/patient-details.component.ts","./src/app/patient-details/patient-details.component.html","./src/app/patient-list/patient-list.component.ts","./src/app/patient-list/patient-list.component.html","./src/app/patient.service.ts","./src/app/patient.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { DaignosisComponent } from \"./daignosis/daignosis.component\";\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientDetailsComponent } from './patient-details/patient-details.component';\n\nconst routes: Routes = [\n {path: \"\", redirectTo:\"home\", pathMatch: \"full\"} ,\n {path: \"home\" , component: HomeComponent},\n {path: \"daignosis\", component: DaignosisComponent},\n {path: \"patient-list\", component: PatientListComponent},\n {path:\"patient-details\", component: PatientDetailsComponent},\n {path: \"patient-details/:id\", component: PatientDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'veterniary-doctor-project';\n}\n","<app-header></app-header>\n<app-sidebar></app-sidebar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { DaignosisComponent } from './daignosis/daignosis.component';\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { PatientDetailsComponent } from './patient-details/patient-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    SidebarComponent,\n    DaignosisComponent,\n    PatientListComponent,\n    PatientDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Daignosis } from './daignosis';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DaignosisService {\n\n  private baseUrl=\"http://localhost:8080/api/v1/diagnosist\";\n  constructor(private http:HttpClient) { }\n\n  createDaignosis(daignosis: Daignosis): Observable<object>{\n    return this.http.post(`${this.baseUrl}`, daignosis);\n  }\n  getDaignosisList():Observable<Daignosis[]>{\n\n    return this.http.get<Daignosis[]>(`${this.baseUrl}`);\n   }\n  getDaignosisById(id:number): Observable<Daignosis>{\n    return this.http.get<Daignosis>(`${this.baseUrl}/${id}`);\n  }\n}\n","export class Daignosis {\n    id: number;\n    identity: number;\n    oname: string;\n    diagnosis: string;\n    medicine: string;\n    payment: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Daignosis } from \"../daignosis\";\nimport { DaignosisService } from \"../daignosis.service\";\n\n@Component({\n  selector: 'app-daignosis',\n  templateUrl: './daignosis.component.html',\n  styleUrls: ['./daignosis.component.css']\n})\nexport class DaignosisComponent implements OnInit {\n\n  daignosis: Daignosis = new Daignosis();\n  constructor(private daignosisservice: DaignosisService) { }\n\n  ngOnInit(): void {\n  }\n  saveDaignosis(){\n    this.daignosisservice.createDaignosis(this.daignosis).subscribe(data => {\n      console.log(data);\n    \n    },\n    error => console.log(error));\n  }\n\n  onSubmit(){\n    console.log(this.daignosis);\n    this.saveDaignosis();\n  }\n}\n","<!-- Page content -->\n<div class=\"content\">\n    <div class=\"container jumbotron col-md-6 offset-md-3 mt-3\">\n      <form (ngSubmit)=\"onSubmit()\">\n        <h3 class=\"text-center mb-3\">Diagnosis Entry</h3>\n        <div class=\"row\">\n          <div class=\"form-group col-6\">\n            <label>Identity No</label>\n            <input type=\"text\" class=\"form-control\" id=\"identity\" name=\"identity\" [(ngModel)]=\"daignosis.identity\">\n          </div>\n          <!-- <div class=\"form-group col-6\">\n            <label>Date</label>\n            <input type=\"text\" class=\"form-control\" id=\"date\" name=\"date\" ngModel>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <label>Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"oname\" name=\"oname\" [(ngModel)]=\"daignosis.oname\">\n        </div>\n        <hr>\n        <div class=\"form-group\">\n          <label>Daignosis list:</label>\n          <select class=\"form-control\" id=\"sel1\" name=\"daignosis\" [(ngModel)]=\"daignosis.diagnosis\">\n            <option selected>Select Diagnosis</option>\n            <option>Ear Infaction</option>\n            <option>Kannel Cough</option>\n            <option>Diarrhoea</option>\n            <option>Heartworm</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label>Medicine list:</label>\n          <select class=\"form-control\" id=\"sel1\" name=\"medicine\" [(ngModel)]=\"daignosis.medicine\">\n            <option selected>Select Medicine</option>\n            <option>Himalaya Digyton Plus</option>\n            <option>Probiotic Miracle</option>\n            <option>carprofen</option>\n            <option>deracoxib</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label>Payment</label>\n          <input type=\"text\" class=\"form-control\" id=\"payment\" name=\"payment\" [(ngModel)]=\"daignosis.payment\">\n        </div>\n        \n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm navbar-custom\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"home\">Home</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"about\">About</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"contact\">Contact</a>\n      </li>\n    </ul>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Patient } from \"../patient\";\nimport { PatientService } from \"../patient.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  patient: Patient = new Patient();\n  constructor(private patientservice:PatientService,\n               private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  savePatient(){\n    this.patientservice.createEmployee(this.patient).subscribe(data => {\n      console.log(data);\n      this.goToDaignosis();\n    },\n    error => console.log(error));\n  }\n  goToDaignosis(){\n    this.router.navigate([\"/daignosis\"]);   \n }\n  onSubmit(){\n    console.log(this.patient);\n    this.savePatient();\n  }\n}\n","<div class=\"content\">\n    <div class=\"container jumbotron col-md-6 offset-md-3 mt-3\">\n        <form (ngSubmit)=\"onSubmit()\">\n           <h3 class=\"text-center mb-3\">New Patinet</h3>\n            <div class=\"form-group\">\n                <label>Owner Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"oname\" name=\"oname\" [(ngModel)]=\"patient.oname\"/>\n            </div>\n            <div class=\"form-group\">\n               <label>Breed Name</label>\n               <input type=\"text\" class=\"form-control\" id=\"bname\" name=\"bname\" [(ngModel)]=\"patient.bname\"/>\n           </div>\n           <div class=\"form-group\">\n               <label>Pet Name</label>\n               <input type=\"text\" class=\"form-control\" id=\"pname\" name=\"pname\" [(ngModel)]=\"patient.pname\"/>\n           </div>\n           <div class=\"form-group\">\n               <label>Contact No.</label>\n               <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" [(ngModel)]=\"patient.phone\"/>\n           </div>\n           <div class=\"form-group\">\n               <label>Address</label><br>\n               <textarea name=\"address\" id=\"address\" cols=\"50\" rows=\"5\" [(ngModel)]=\"patient.address\"></textarea>\n           </div>\n           \n   \n           <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n        </form>\n       </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Daignosis } from '../daignosis';\nimport { Patient } from \"../patient\";\nimport { PatientService } from '../patient.service';\nimport { DaignosisService } from \"../daignosis.service\";\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './patient-details.component.html',\n  styleUrls: ['./patient-details.component.css']\n})\nexport class PatientDetailsComponent implements OnInit {\n\n  id1: number\n  id2: number\n  patient: Patient\n  diagnosis: Daignosis\n  constructor(private routs:ActivatedRoute,\n              private patientservice:PatientService,\n              private diagnosisservice:DaignosisService) { }\n\n  ngOnInit(): void {\n    this.id1 = this.routs.snapshot.params[\"id1\"];\n\n    this.patient = new Patient();\n    this.patientservice.getPatientById(this.id1).subscribe( data =>{\n      this.patient = data;\n    });\n    this.id2 = this.routs.snapshot.params[\"id2\"];\n\n    this.diagnosis = new Daignosis();\n    this.diagnosisservice.getDaignosisById(this.id2).subscribe(data =>{\n      this.diagnosis=data;\n    });\n\n  }\n}\n","<div class=\"content\">\n<h3>patient Details</h3>\n<div>\n    <div>\n        <label><b>Owner Name:</b></label>{{patient.oname}}\n    </div>\n    <div>\n        <label><b>Breed Name:</b></label>{{patient.bname}}\n    </div>\n    <div>\n        <label><b>Pet Name:</b></label>{{patient.pname}}\n    </div>\n    <div>\n        <label><b>Contact No:</b></label>{{patient.phone}}\n    </div>\n    <div>\n        <label><b>Address:</b></label>{{patient.address}}\n    </div>\n    <div>\n        <label><b>Dagnosis Name:</b></label>{{diagnosis.diagnosis}}\n    </div>\n    <div>\n        <label><b>Medicine Name:</b></label>{{diagnosis.medicine}}\n    </div>\n    <div>\n        <label><b>Payment:</b></label>{{diagnosis.payment}}\n    </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Daignosis } from '../daignosis';\nimport { DaignosisService } from '../daignosis.service';\nimport { Patient } from '../patient';\nimport { PatientService } from '../patient.service';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n\n  patients:Patient[];\n  daignosises:Daignosis[];\n  constructor(private patientservice:PatientService,\n              private daignosisservice:DaignosisService,\n              private router:Router) { }\n\n  ngOnInit(): void {\n    this.getPatient();\n    this.getDaignosis();\n  }\n\n  private getPatient(){\n    this.patientservice.getPatientList().subscribe(data => \n      {\n        this.patients = data;\n      });\n  }\n  private getDaignosis(){\n    this.daignosisservice.getDaignosisList().subscribe(data => \n      {\n        this.daignosises = data;\n      });\n  }\n  PatientDetails(id1: number){\n    this.router.navigate([\"patient-details\",id1]);\n\n  }\n  DiagnosisDetails(id2:number){\n    this.router.navigate([\"patient-details\",id2]);\n  }\n}\n","<div class=\"content\">\n    <h2>Patient List</h2>\n<table class=\"table table-striped\">\n<thead>\n    <tr>\n        <th>Id</th>\n        <th>Owner Name</th>\n        <th>Breed Name</th>\n        <th>Pet Name</th>\n        <th>Contact No</th>\n          <th>Address</th>\n          <th>Action</th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let patient of patients\">\n        <td>{{patient.id}}</td>\n          <td>{{patient.oname}}</td>\n          <td>{{patient.bname}}</td>\n          <td>{{patient.pname}}</td>\n          <td>{{patient.phone}}</td>\n          <td>{{patient.address}}</td>\n        <td>\n        <button (click)=\"patientDetails(patient.id1)\" class=\"btn btn-success\" style=\"margin-left: 10px;\">Details</button>\n        </td>\n    </tr>\n</tbody>\n</table>\n<hr>\n  <h2>Daignosis List</h2>\n  <table class=\"table table-striped\">\n  <thead>\n      <tr>\n          <th>Id</th>\n          <th>Identity</th>\n          <th>Owner Name</th>\n          <th>Daignosis</th>\n          <th>Medicine</th>\n          <th>Payment</th>\n          <th>Action</th>\n      </tr>\n  </thead>\n  <tbody>\n      <tr *ngFor=\"let daignosis  of daignosises\">\n          <td>{{daignosis.id}}</td>\n          <td>{{daignosis.identity}}</td>\n          <td>{{daignosis.oname}}</td>\n          <td>{{daignosis.diagnosis}}</td>\n          <td>{{daignosis. medicine}}</td>\n          <td>{{daignosis.payment}}</td>\n          <td>\n          <!-- <button (click)=\"updateEmployee(employee.id)\" class=\"btn btn-info\">Update</button>    -->\n          <button (click)=\"DiagnosisDetails(daignosis.id2)\" class=\"btn btn-success\" style=\"margin-left: 10px;\">Details</button>\n          </td>\n      </tr>\n  </tbody>\n  </table>\n  \n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Patient } from './patient';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n\n  private baseUrl=\"http://localhost:8080/api/v1/patient\";\n  constructor(private http:HttpClient) { }\n\n  createEmployee(patient: Patient): Observable<object>{\n    return this.http.post(`${this.baseUrl}`, patient);\n  }\n  getPatientList():Observable<Patient[]>{\n\n    return this.http.get<Patient[]>(`${this.baseUrl}`);\n   }\n\n   getPatientById(id:number): Observable<Patient>{\n    return this.http.get<Patient>(`${this.baseUrl}/${id}`);\n  }\n}\n","export class Patient {\n    id: number;\n    oname: string;\n    bname: string;\n    pname: string;\n    phone: number;\n    address: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- The sidebar -->\n<div class=\"sidebar\">\n    <a routerLink=\"daignosis\">Daignosis</a>\n    <a routerLink=\"update-diagnosis\">New Diagnosis</a>\n    <a routerLink=\"patient-list\">Patient List</a>\n    <a routerLink=\"patient-details\">Patient Details</a>\n    \n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}